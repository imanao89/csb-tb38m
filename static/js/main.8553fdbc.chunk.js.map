{"version":3,"sources":["serviceWorker.js","components/MyButton.js","components/Display.js","containers/Calculator.js","containers/CCP.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","MyButton","props","classes","makeStyles","theme","margin","spacing","backgroundColor","useStyles","Button","className","onClick","children","box","fontSize","width","Display","Box","Calculator","useState","firstNumber","setFirstNumber","secondNumber","setSecondNumber","operator","setOperator","isAllClear","setIsAllClear","isDicimalInput","setIsDicimalInput","isAnswerDisplay","setIsAnswerDisplay","handleNumberClick","num","String","Number","handleOperatorClick","a","fixDigits","toExponential","Math","round","displayMarkup","clearButtonMarkup","Typography","variant","display","flexDirection","justifyContent","CCP","containerDiv","React","createRef","connect","core","initCCP","this","current","ccpUrl","loginPopup","ref","Component","App","rootElement","document","getElementById","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8553fdbc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function MyButton(props) {\n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n      backgroundColor: props.backgroundColor\n    }\n  }));\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Button className={classes.margin} onClick={props.onClick}>\n        {props.children}\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    fontSize: \"60px\",\n    width: \"100%\",\n    margin: \"0 auto\"\n  }\n}));\n\nexport default function Display(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Box className={classes.box}>{props.children}</Box>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\n//components\nimport MyButton from \"../components/MyButton\";\nimport Display from \"../components/Display\";\n\n//material-ui\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Calculator() {\n  //保持したいstates\n  const [firstNumber, setFirstNumber] = useState(\"0\");\n  const [secondNumber, setSecondNumber] = useState(\"0\");\n  const [operator, setOperator] = useState(false);\n  const [isAllClear, setIsAllClear] = useState(true);\n  const [isDicimalInput, setIsDicimalInput] = useState(false);\n  const [isAnswerDisplay, setIsAnswerDisplay] = useState(false);\n\n  //数字ボタンを押したとき\n  const handleNumberClick = (num) => {\n    //=ボタンを押した直後に数字を押した場合\n    if (isAnswerDisplay) {\n      setFirstNumber(num);\n      setSecondNumber(\"0\");\n      setOperator(false);\n      setIsAnswerDisplay(false);\n      setIsDicimalInput(false);\n    } else {\n      //演算子が押されていないときはfirstNumberを更新する\n      if (!operator) {\n        if (isDicimalInput) {\n          setFirstNumber(String(firstNumber) + String(num));\n        } else {\n          setFirstNumber(String(Number(firstNumber) * 10 + num));\n        }\n        //演算子が押されているときはsecondNumberを更新する\n      } else {\n        if (isDicimalInput) {\n          setSecondNumber(String(secondNumber) + String(num));\n        } else {\n          setSecondNumber(String(Number(secondNumber) * 10 + num));\n        }\n      }\n    }\n    //0以外が押されたときはACをCに変える\n    if (num !== 0) {\n      setIsAllClear(false);\n    }\n  };\n\n  //00ボタンを押したとき\n  const handleDoubleZeroClick = () => {\n    if (!operator) {\n      if (isDicimalInput) {\n        setFirstNumber(String(firstNumber) + \"00\");\n      } else {\n        setFirstNumber(String(Number(firstNumber) * 100));\n      }\n    } else {\n      if (isDicimalInput) {\n        setSecondNumber(String(secondNumber) + \"00\");\n      } else {\n        setSecondNumber(String(Number(secondNumber) * 100));\n      }\n    }\n  };\n\n  //AC/Cボタンを押したとき\n  const handleClearClick = () => {\n    setIsDicimalInput(false);\n    //ACのときはすべてリセット\n    if (isAllClear) {\n      setFirstNumber(\"0\");\n      setOperator(false);\n      setIsAnswerDisplay(false);\n      //CのときはsecondNumberを\"0\"にする\n    } else {\n      setIsAllClear(true);\n      if (isAnswerDisplay) {\n        setFirstNumber(\"0\");\n      } else {\n        if (!operator) {\n          setFirstNumber(\"0\");\n        } else {\n          setSecondNumber(\"0\");\n        }\n      }\n    }\n  };\n\n  // -/+ボタンを押したとき\n  const handleMinusPlusClick = () => {\n    if (isAnswerDisplay) {\n      setFirstNumber(-1 * Number(firstNumber));\n    } else {\n      if (!operator) {\n        setFirstNumber(-1 * Number(firstNumber));\n      } else {\n        setSecondNumber(-1 * Number(secondNumber));\n      }\n    }\n  };\n\n  // %ボタンを押したとき\n  const handlePercentageClick = () => {\n    if (isAnswerDisplay) {\n      setFirstNumber(Number(firstNumber) * 0.01);\n    } else {\n      if (!operator) {\n        setFirstNumber(Number(firstNumber) * 0.01);\n      } else {\n        setSecondNumber(Number(secondNumber) * 0.01);\n      }\n    }\n  };\n\n  //演算子を押したとき\n  //引数はadd subtract divide multiplyのどれか\n  const handleOperatorClick = (a) => {\n    if (isAnswerDisplay) {\n      setIsAnswerDisplay(false);\n    } else {\n      if (secondNumber !== \"0\") {\n        if (operator === \"add\") {\n          setFirstNumber(Number(firstNumber) + Number(secondNumber));\n        } else if (operator === \"subtract\") {\n          setFirstNumber(Number(firstNumber) - Number(secondNumber));\n        } else if (operator === \"divide\") {\n          setFirstNumber(Number(firstNumber) / Number(secondNumber));\n        } else if (operator === \"multiply\") {\n          setFirstNumber(Number(firstNumber) * Number(secondNumber));\n        }\n      }\n    }\n    setIsDicimalInput(false);\n    setOperator(a);\n    setSecondNumber(\"0\");\n  };\n\n  // .ボタンを押したとき\n  const handleDicimalPointClick = () => {\n    if (isDicimalInput) return;\n\n    setIsDicimalInput(true);\n    if (!operator) {\n      setFirstNumber(String(firstNumber) + \".\");\n    } else {\n      setSecondNumber(String(secondNumber) + \".\");\n    }\n  };\n\n  // =ボタンを押したとき\n  const handleAnswerClick = () => {\n    setIsDicimalInput(false);\n    setIsAnswerDisplay(true);\n    if (operator === \"add\") {\n      if (secondNumber === \"0\") {\n        //演算子が指定されたあと、secondNumberが入力されずに=が押された場合\n        //例えば、5 + = と入力した場合、10と表示する。\n        setSecondNumber(firstNumber);\n        setFirstNumber(Number(firstNumber) + Number(firstNumber));\n      } else {\n        setFirstNumber(Number(firstNumber) + Number(secondNumber));\n      }\n    } else if (operator === \"subtract\") {\n      if (secondNumber === \"0\") {\n        setSecondNumber(Number(firstNumber));\n        setFirstNumber(Number(firstNumber) - Number(firstNumber));\n      } else {\n        setFirstNumber(Number(firstNumber) - Number(secondNumber));\n      }\n    } else if (operator === \"divide\") {\n      if (secondNumber === \"0\") {\n        setSecondNumber(Number(firstNumber));\n        setFirstNumber(Number(firstNumber) / Number(firstNumber));\n      } else {\n        setFirstNumber(Number(firstNumber) / Number(secondNumber));\n      }\n    } else if (operator === \"multiply\") {\n      if (secondNumber === \"0\") {\n        setSecondNumber(Number(firstNumber));\n        setFirstNumber(Number(firstNumber) * Number(firstNumber));\n      } else {\n        setFirstNumber(Number(firstNumber) * Number(secondNumber));\n      }\n    }\n  };\n\n  //大きい桁数や小数点以下桁数の調整\n  const fixDigits = (num) => {\n    if (num >= 10e8) {\n      return num.toExponential(2);\n    } else {\n      return Math.round(num * 1000000) / 1000000;\n    }\n  };\n  //表示する数字\n  const displayMarkup =\n    !isAnswerDisplay && operator\n      ? fixDigits(Number(secondNumber))\n      : fixDigits(Number(firstNumber));\n  const clearButtonMarkup = isAllClear ? \"AC\" : \"C\";\n\n  return (\n    <div>\n      <Typography variant=\"h5\">React Calculator</Typography>\n      <Display>{displayMarkup}</Display>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box display=\"flex\" justifyContent=\"center\">\n          <MyButton backgroundColor=\"gray\" onClick={handleClearClick}>\n            <Typography variant=\"h5\">{clearButtonMarkup}</Typography>\n          </MyButton>\n          <MyButton backgroundColor=\"gray\" onClick={handleMinusPlusClick}>\n            <Typography variant=\"h5\">-/+</Typography>\n          </MyButton>\n          <MyButton backgroundColor=\"gray\" onClick={handlePercentageClick}>\n            <Typography variant=\"h5\">%</Typography>\n          </MyButton>\n          <MyButton\n            backgroundColor=\"orange\"\n            onClick={() => handleOperatorClick(\"divide\")}\n          >\n            <Typography variant=\"h5\">÷</Typography>\n          </MyButton>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <MyButton\n            onClick={() => handleNumberClick(7)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">7</Typography>\n          </MyButton>\n          <MyButton\n            onClick={() => handleNumberClick(8)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">8</Typography>\n          </MyButton>\n          <MyButton\n            onClick={() => handleNumberClick(9)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">9</Typography>\n          </MyButton>\n          <MyButton\n            backgroundColor=\"orange\"\n            onClick={() => handleOperatorClick(\"multiply\")}\n          >\n            <Typography variant=\"h5\">×</Typography>\n          </MyButton>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <MyButton\n            onClick={() => handleNumberClick(4)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">4</Typography>\n          </MyButton>\n          <MyButton\n            onClick={() => handleNumberClick(5)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">5</Typography>\n          </MyButton>\n          <MyButton\n            onClick={() => handleNumberClick(6)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">6</Typography>\n          </MyButton>\n          <MyButton\n            backgroundColor=\"orange\"\n            onClick={() => handleOperatorClick(\"subtract\")}\n          >\n            <Typography variant=\"h5\">-</Typography>\n          </MyButton>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <MyButton\n            onClick={() => handleNumberClick(1)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">1</Typography>\n          </MyButton>\n          <MyButton\n            onClick={() => handleNumberClick(2)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">2</Typography>\n          </MyButton>\n          <MyButton\n            onClick={() => handleNumberClick(3)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">3</Typography>\n          </MyButton>\n          <MyButton\n            backgroundColor=\"orange\"\n            onClick={() => handleOperatorClick(\"add\")}\n          >\n            <Typography variant=\"h5\">+</Typography>\n          </MyButton>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <MyButton\n            onClick={() => handleNumberClick(0)}\n            backgroundColor=\"#e0e0e0\"\n          >\n            <Typography variant=\"h5\">0</Typography>\n          </MyButton>\n          <MyButton onClick={handleDoubleZeroClick} backgroundColor=\"#e0e0e0\">\n            <Typography variant=\"h5\">00</Typography>\n          </MyButton>\n          <MyButton onClick={handleDicimalPointClick} backgroundColor=\"#e0e0e0\">\n            <Typography variant=\"h5\">.</Typography>\n          </MyButton>\n          <MyButton backgroundColor=\"orange\" onClick={handleAnswerClick}>\n            <Typography variant=\"h5\">=</Typography>\n          </MyButton>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default Calculator;\n","import React, { Component } from \"react\";\nimport \"amazon-connect-streams\";\n\nclass CCP extends Component {\n  constructor(props) {\n    super(props);\n    this.containerDiv = React.createRef();\n  }\n\n  componentDidMount() {\n    // CCPの読み込み処理\n    // eslint-disable-next-line no-undef\n    connect.core.initCCP(this.containerDiv.current, {\n      ccpUrl: \"https://imanao89.awsapps.com/connect/ccp-v2/\",\n      loginPopup: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"CCP\">\n        <main>\n          <div className=\"ccp\">\n            {/* ccp */}\n            <div className=\"containerDiv\" ref={this.containerDiv} />\n          </div>\n          <div className=\"content\" />\n        </main>\n        <footer>version: 1.2</footer>\n      </div>\n    );\n  }\n}\n\nexport default CCP;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Calculator from \"./containers/Calculator\";\nimport CCP from \"./containers/CCP\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Calculator />\n        <CCP />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}